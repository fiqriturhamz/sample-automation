name: Build and Deploy to Google Play

on:
  push:
    branches:
      - automate
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Give Permission
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean assembleRelease bundleRelease

      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: sample_automation
          path: app/release/

      - name: Debug Output
        run: |
          ls -R app/release/
          ls -R app/build/outputs/apk/release/

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Sign APKs
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/release/
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Debug Output Deploy
        run: |
          ls -R app/release/

  release:
    needs: deploy
    runs-on: ubuntu-latest

    permissions:
      contents: write
    steps:
      - name: Download APK from build
        uses: actions/download-artifact@v1
        with:
          name: sample_automation

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.1${{ github.event.inputs.version }}
          name: Release Default APK from Epersepin${{ github.event.inputs.version }}
          draft: false
          prerelease: false
          files: |
             app/release/sample_automation*.apk
             app/release/sample_automation*.aab

  # publish:
  #   needs: deploy
  #   runs-on: ubuntu-latest            
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v2

  #     - name: Set up JDK
  #       uses: actions/setup-java@v2
  #       with:
  #         distribution: 'adopt'
  #         java-version: '17'

  #     - name: Debug Output
  #       run: ls -R app/release/

  #     - name: Build with Gradle
  #       run: ./gradlew clean assembleRelease bundleRelease

  #     - name: Build and Publish to Play Store
  #       run: |
  #         chmod +x ./gradlew
  #         ./gradlew publishBundle
  #       env:
  #         PLAY_PUBLISH_JSON: ${{ secrets.PLAY_STORE_JSON_KEY }}

  #     - name: Deploy to Alpha
  #       uses: r0adkll/upload-google-play@v1
  #       with:
  #         serviceAccountJson: service_account.json
  #         packageName: com.id.sample_automation
  #         releaseFiles: app/release/app-release.apk
  #         track: alpha
  #         whatsNewDirectory: distribution/
